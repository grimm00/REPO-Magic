name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Create release packages
      run: |
        echo "Creating release for tag: $GITHUB_REF"
        
        # Extract version from tag
        VERSION=${GITHUB_REF#refs/tags/}
        echo "Version: $VERSION"
        
        # Set version for package creation
        export VERSION=${VERSION#v}  # Remove 'v' prefix (v1.1 -> 1.1)
        
        # Create both packages
        ./create_package.sh
        ./create_user_package.sh
        
        echo "Packages created successfully"
        
    - name: Create release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        # Extract version from tag
        VERSION=${GITHUB_REF#refs/tags/}
        
        # Create release notes (updated content)
        cat > release_notes.md << EOL
        # Release $VERSION
        
        ## Changes
        - Automated release from CI/CD pipeline
        - All tests passed
        - Ready for production deployment
        
        ## Installation
        \`\`\`bash
        # Download and run installer
        curl -fsSL https://raw.githubusercontent.com/grimm00/REPO-Magic/main/modinstaller.sh | bash
        \`\`\`
        EOL
        
        # Create GitHub release
        gh release create "$VERSION" \
          --title "Release $VERSION" \
          --notes-file release_notes.md \
          --latest \
          /tmp/REPO-Magic-v${VERSION#v}.zip \
          /tmp/REPO-Magic-User-v${VERSION#v}.zip
          
    - name: Update documentation
      run: |
        echo "Updating documentation for release $VERSION"
        # This would typically update version numbers in docs
