name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Bash
      run: echo "Bash version: $BASH_VERSION"
      
    - name: Run shell script tests
      run: |
        # Test script syntax
        find . -name "*.sh" -exec bash -n {} \;
        
        # Test script permissions
        find . -name "*.sh" -exec test -x {} \; || echo "Some scripts are not executable"
        
    - name: Validate YAML files
      run: |
        # Check if yq is available for YAML validation
        if command -v yq >/dev/null 2>&1; then
          find . -name "*.yml" -o -name "*.yaml" | xargs yq eval . >/dev/null
        else
          echo "yq not available, skipping YAML validation"
        fi
        
    - name: Check file permissions
      run: |
        # Ensure scripts are executable
        chmod +x scripts/**/*.sh
        chmod +x *.sh
        
    - name: Run basic functionality tests
      run: |
        # Test script help functionality
        ./modinstaller.sh --help || echo "Help test failed"
        ./modrollback.sh --help || echo "Help test failed"

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run security checks
      run: |
        # Check for common security issues in shell scripts
        echo "Running security checks..."
        
        # Check for hardcoded secrets (basic check)
        if grep -r "password\|secret\|key" --include="*.sh" . | grep -v "SECRET_KEY\|API_KEY" | grep -v "echo.*secret"; then
          echo "Warning: Potential hardcoded secrets found"
        fi
        
        # Check for proper error handling
        echo "Checking error handling..."
        find . -name "*.sh" -exec grep -l "set -e" {} \;

  deploy-staging:
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    environment: staging
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        echo "This would typically involve:"
        echo "1. Building the application"
        echo "2. Running integration tests"
        echo "3. Deploying to staging servers"
        echo "4. Running smoke tests"

  deploy-production:
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to production
      run: |
        echo "Deploying to production environment..."
        echo "This would typically involve:"
        echo "1. Building the application"
        echo "2. Running full test suite"
        echo "3. Deploying to production servers"
        echo "4. Running health checks"
        echo "5. Creating release tag"
